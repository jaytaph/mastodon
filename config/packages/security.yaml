security:
    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            security: true
            context: api
            stateless: true
            provider: app_user_provider
            custom_authenticators:
                - App\Security\OAuth\DevelopmentAuthenticator
            oauth2: true
        main:
            pattern: ^/
            security: true
            # Use the same context as the API firewall
            context: api
            lazy: true
            provider: app_user_provider
            logout:
                path: app_logout
                target: /
            form_login:
                check_path: app_login
                login_path: app_login

    access_control:
        - { path: ^/oauth/authorize, roles: PUBLIC_ACCESS }
        - { path: ^/oauth/token, roles: PUBLIC_ACCESS }

        - { path: ^/api/v1/accounts, roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/instance, roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/apps, roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/custom_emojis, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: ROLE_USER }

        - { path: ^/, roles: PUBLIC_ACCESS }

        - { path: ^/admin/first-time$, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
